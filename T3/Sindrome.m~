function vetor_funcoes = Sindrome
    vetor_funcoes.HDD = @HDD;
    vetor_funcoes.SDD = @SDD;  
end

function [u_hat] = HDD(b,struct_info)
    k = struct_info.k;
    lut = struct_info.lut;
    h = struct_info.h;
    s = mod(b*h',2);
    [l,c] = size(lut);
    u_hat = 0;
    for i=1:l
       if(s == lut(i,1:k-1))
          erro = lut(i,(length(s))+1:end);
          palavra_codigo = xor(erro,b);
          u_hat = palavra_codigo(1:k);
          break
       end
    end
end

function [u_hat] = SDD(r,struct_info,)
    c = struct_info.c;
    c_mod = (c * 2) -1;
    k = struct_info.k;
    u_hat = 0
    c_mod = struct_info.c_mod';
    for i = 1:length(c)
        %distancia euclidiana
        distancia = sum((c_mod - r).^2, 2);
        [valor_min indice] = min(distancia);
        c_hat(i, 1:code.n) = code.c(indice, :);
    end
    dists = r * c_mod';
    [M, index] = max(dists);
    c_estimado = c(index,:);
    u_hat = c_estimado(1:k);
   
end


% function [u_hat] = SDD_Q3(r,struct_info)
%     c = struct_info.c;
%     k = struct_info.k;
%     dist = r * c';
%     maximo = max(multi);
% 
%     for i = 1:length(codigo.c)
%          if (multi(i) == maximo);
%              c_hat = codigo.c(i,:) >0;
%              break;
%          end
%     end
%    u_hat = c_hat(1:codigo.k);
% end
